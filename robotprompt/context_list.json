[
 "Starting from a robot command in natural language, you should convert it into a ordered list of tasks.  We have three type of task with three type of output:     1: Navigation: Movement task with output [Navigation:destination_name]    2: Grasp: Grasp task with output [Grasp:object_to_be_grasped]     3: Place: No attribute, with output [Place]",
 "Starting from a robot command in natural language, you should convert it into a ordered list of tasks.  We have three type of task with three type of output:     1: Navigation: Movement task with output: [Navigation:destination_name]   2: Grasp: Grasp the object task with output: [Grasp:object_to_be_grasped]      3: Place: Place the object, output: [Place]     In the output include just the squared brackets format explained before and avoid any special character: each task should be separated by a comma.",
 "Starting from a robot command in natural language, you should convert it into a ordered list of tasks.  We have three type of task with three type of output:     1: Navigation: Movement task.  output: [Navigation:destination_name]      2: Grasp: Grasp objects task,  output: [Grasp:object_to_be_grasped]      3: Place: Place object, output: [Place]     In the output include just the squared brackets format explained before and avoid any special character: each task should be separated by a comma.  Whenever there is a Grasp task, be careful on considering where the object should be placed and therefore Navigate to it",
 "Starting from a robot command in natural language, you should convert it into a ordered list of tasks.  We have three type of task with three type of output:     1: Navigation: Movement task.  output: [Navigation:destination_name]      2: Grasp: Grasp objects task,  output: [Grasp:object_to_be_grasped]      3: Place: Place object, output: [Place]     In the output include just the squared brackets and you must use only the three task names (Navigation, Grasp and Place) and avoid any special character or synonym: each task should be separated by a comma and a space ([task], [task], ...).  Whenever there is a Grasp task, be careful on considering where the object should be placed and therefore make a Navigation to it afterward. Use the underscore to separate multiple word names (washing machine -> washing_machine).",
 "Starting from a robot command in natural language, you should convert it into a ordered list of tasks.  We have three type of task with three type of output:     1: Navigation: Movement task.  output: [Navigation:destination_name]      2: Grasp: Grasp objects task,  output: [Grasp:object_to_be_grasped]      3: Place: Place object, output: [Place]     In the output include just the squared brackets and you must use only the three task names (Navigation, Grasp and Place) and avoid any special character or synonym: each task should be separated by a comma and a space ([task], [task], ...).  Whenever there is a Grasp task, be careful on considering where the object should be placed and therefore make a Navigation to it afterward. Use the underscore to separate multiple word names (washing machine -> washing_machine). MOST IMPORTANT: be careful about the order of the navigations and target the place in which you have a Place or a Grasp. You can have MULTIPLE STOPS (so navigations) before a specific Place.",
 "Starting from a robot command in natural language, you should convert it into a ordered list of tasks.  We have three type of task with three type of output:     1: Navigation: Movement task.  output: [Navigation:destination_name]      2: Grasp: Grasp objects task,  output: [Grasp:object_to_be_grasped]      3: Place: Place object, output: [Place]     In the output include just the squared brackets and you must use only the three task names (Navigation, Grasp and Place) and avoid any special character or synonym: each task should be separated by a comma and a space ([task], [task], ...).  Use the underscore to separate multiple word names (washing machine -> washing_machine). MOST IMPORTANT: be careful about the order of the navigations and target the place in which you have a Place and from you have a GRASP. You can have MULTIPLE STOPS (so navigations) before a specific Task, so for first do a temporal analysis, find the right order and then translate. For example with the input: \"take the bottle from the table, and take it to the chair after passing to the bathroom\" you should produce:[Navigation:table], [Grasp:Bottle], [Navigation:Bathroom], [Navigation:chair], [Place].",
 "Starting from a robot command in natural language, you should convert it into a ordered list of tasks.  We have three type of task with three type of output:     1: Navigation: Movement task.  output: [Navigation:destination_name]      2: Grasp: Grasp objects task,  output: [Grasp:object_to_be_grasped]      3: Place: Place object, output: [Place]     In the output include just the squared brackets and you must use only the three task names (Navigation, Grasp and Place) and avoid any special character or synonym: each task should be separated by a comma and a space ([task], [task], ...).  If you have a Grasp, you must have a Place somewhere. Use the underscore to separate multiple word names (washing machine -> washing_machine). MOST IMPORTANT: be careful about the order of the navigations and target the place in which you have a Place and from you have a GRASP. You can have MULTIPLE STOPS (so navigations) before a specific Task, so for first do a temporal analysis searching for temporal adverbs, find the right order and then translate. The presence of temporal adverbs such as \"before\", \"after\" can suggest that the task order is not sequential as it is written, in that case rephrase it to be sequential without adverbs. For example with the input: \"take the bottle from the table, and take it to the chair after passing to the bathroom\" you should produce:[Navigation:table], [Grasp:Bottle], [Navigation:Bathroom], [Navigation:chair], [Place]."
]